{"version":3,"sources":["components/Table.js","components/Form.js","App.js","components/Api.js","index.js"],"names":["TableHeader","react_default","a","createElement","TableBody","props","rows","characterData","map","row","index","key","name","job","onClick","removeCharacter","Table","Table_TableHeader","Table_TableBody","Form","_Component","_getPrototypeOf2","_this","Object","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","initialState","state","handleAddCharacter","event","_event$target","target","value","setState","defineProperty","submitForm","handleSubmit","inherits","createClass","_this$state","htmlFor","type","id","onChange","Component","App","characters","filter","character","i","toConsumableArray","className","components_Table","components_Form","ReactDOM","createRoot","document","querySelector","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.e9ed8488.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst TableHeader = () => {\r\n    return (\r\n        <thead>\r\n            <tr>\r\n                <th>Name</th>\r\n                <th>Job</th>\r\n            </tr>\r\n        </thead>\r\n    );\r\n}\r\n\r\nconst TableBody = (props) => {\r\n    const rows = props.characterData.map((row, index) => {\r\n        return (\r\n            <tr key={index}>\r\n                <td>{row.name}</td>\r\n                <td>{row.job}</td>\r\n                <td>\r\n                    <button onClick={() => props.removeCharacter(index)}>Delete</button>\r\n                </td>\r\n            </tr>\r\n        );\r\n    });\r\n\r\n    return <tbody>{rows}</tbody>;\r\n}\r\n\r\nconst Table = (props) => {\r\n    const { characterData, removeCharacter } = props;\r\n\r\n    return (\r\n        <table>\r\n            <TableHeader />\r\n            <TableBody characterData={characterData} removeCharacter={removeCharacter} />\r\n        </table>\r\n    );\r\n}\r\n\r\nexport default Table;","import React, { Component } from 'react';\r\n\r\nclass Form extends Component {\r\n    initialState = {\r\n        name: '',\r\n        job: '',\r\n    }\r\n\r\n    state = this.initialState;\r\n\r\n    render() {\r\n        const { name, job } = this.state;\r\n\r\n        return (\r\n            <form>\r\n                <label htmlFor=\"name\">Name</label>\r\n                <input\r\n                    type=\"text\"\r\n                    name=\"name\"\r\n                    id=\"name\"\r\n                    value={name}\r\n                    onChange={this.handleAddCharacter} />\r\n                <label htmlFor=\"job\">Job</label>\r\n                <input\r\n                    type=\"text\"\r\n                    name=\"job\"\r\n                    id=\"job\"\r\n                    value={job}\r\n                    onChange={this.handleAddCharacter} />\r\n                <input type=\"button\" value=\"Submit\" onClick={this.submitForm} />\r\n            </form>\r\n        );\r\n    }\r\n    \r\n    handleAddCharacter = (event) => {\r\n        const { name, value } = event.target;\r\n\r\n        this.setState({\r\n            [name]: value,\r\n        });\r\n    }\r\n\r\n    submitForm = () => {\r\n        this.props.handleSubmit(this.state);\r\n        this.setState(this.initialState);\r\n    }\r\n}\r\n\r\nexport default Form;","import React, { Component } from 'react';\r\nimport Table from './components/Table';\r\nimport Form from './components/Form';\r\nimport Api from './components/Api';\r\n\r\n// Only want to create class components if they have their own state\r\nclass App extends Component {\r\n    state = {\r\n        characters: [],\r\n    }\r\n\r\n    render() {\r\n        const { characters } = this.state;\r\n\r\n        return (\r\n            <div className=\"container\">\r\n                <Table characterData={characters} removeCharacter={this.removeCharacter} />\r\n                <Form handleSubmit={this.handleSubmit} />\r\n            </div>\r\n        );\r\n    }\r\n\r\n    removeCharacter = (index) => {\r\n        const { characters } = this.state;\r\n\r\n        this.setState({\r\n            characters: characters.filter((character, i) => {\r\n                return i !== index;\r\n            })\r\n        });\r\n    }\r\n\r\n    // Append to list of characters\r\n    handleSubmit = (character) => {\r\n        this.setState({\r\n            characters: [...this.state.characters, character]\r\n        });\r\n    }\r\n}\r\n\r\nexport default App;","import React, { Component } from \"react\";\r\n\r\nconst url = 'https://en.wikipedia.org/w/api.php?action=opensearch&search=Seona+Dancing&format=json&origin=*';\r\n\r\nclass Api extends Component {\r\n    state = {\r\n        data: [],\r\n    }\r\n\r\n    // This method is a React lifecycle method\r\n    // A lifecyle method changes the order in which React methods are called\r\n    // Mounting refers to an item being inserted into the DOM\r\n    componentDidMount() {\r\n        fetch(url)\r\n            .then((response) => response.json())\r\n            .then((result) => {\r\n                this.setState({\r\n                    data: result,\r\n                });\r\n            })\r\n            .catch((error) => console.error(error));\r\n\r\n    }\r\n\r\n    render() {\r\n        const { data } = this.state;\r\n\r\n        const result = data.map((entry, index) => {\r\n            return <li key={index}>{entry}</li>\r\n        });\r\n\r\n        return <ul>{result}</ul>;\r\n    }\r\n}\r\n\r\nexport default Api;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport './index.css';\r\n\r\nReactDOM.createRoot(document.querySelector('#root')).render(\r\n    <React.StrictMode>\r\n        <App />\r\n    </React.StrictMode>\r\n);"],"sourceRoot":""}